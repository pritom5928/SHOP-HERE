@using ShopHere.Web.ViewModels
@using ShopHere.Web.Utility
@model ShopHere.Web.ViewModels.ShopViewModel

@{
    ViewBag.Title = "Index";
    var defaultImageURL = "/Content/images/placeholder.png";
}
<style>
    .hideSubmit{
        display: none;
    }
    #hidetClearIcon {
        display: none;
    }
    
</style>
@*<a href="https://icons8.com/icon/rmf1Fvj5nBib/close-window">Close Window icon by Icons8</a>*@
<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title"> Shop</h1>
                </div><!-- /.page-title-heading -->

            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <div class="row">
                                <div class="col-sm-9">
                                    <label>
                                        <input type="search" class="search-field" placeholder="Search …" value="@Model.searchTerm" name="searchTerm" id="searchquery" onkeyup="checkSearchVal(this);">
                                    </label>
                                    <input type="submit" class="search-submit hideSubmit" value="Search">
                                </div>
                                <div class="col-sm-3">
                                    <a id="hidetClearIcon" href="@Url.Action("Index", "Shop")"><img src="https://img.icons8.com/fluent/48/000000/close-window.png" /></a>
                                </div>
                            </div>
                            
                            
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            @if (!Model.SortBy.HasValue)
                            {
                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.Default, categoryId = Model.CategoryId,  searchTerm= Model.searchTerm})" class="dataLink active">Default - Newest</a></li>

                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryId = Model.CategoryId, searchTerm= Model.searchTerm})" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>

                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryId = Model.CategoryId, searchTerm= Model.searchTerm })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>

                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow , categoryId = Model.CategoryId, searchTerm= Model.searchTerm})" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                            }

                            else
                            {
                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.Default, categoryId = Model.CategoryId, searchTerm= Model.searchTerm })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Default - Newest</a></li>

                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryId = Model.CategoryId, searchTerm= Model.searchTerm })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>

                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryId = Model.CategoryId, searchTerm= Model.searchTerm })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>

                                <li><a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryId = Model.CategoryId, searchTerm= Model.searchTerm })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                            }

                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured Categories
                        </h5>
                        <div class="tag-list">

                            @foreach (var category in Model.FeaturedCategories)
                            {
                                <a data-href="@Url.Action("GetProductsBySlideFilter", "Shop", new { categoryId = category.Id, sortBy=Model.SortBy, searchTerm= Model.searchTerm})" class="dataLink @(Model.CategoryId.HasValue && Model.CategoryId.Value == category.Id ? "active" : string.Empty)">@category.Name</a>
                            }

                        </div>
                    </div><!-- /.widget -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                    <div class="widget widget_tag">
                        <div class="tag-list">
                            <a href="@Url.Action("Index", "Shop")" class="active">Reset Filter</a>
                        </div>
                    </div><!-- /.widget -->
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div id="productsDiv">
                    @{
                        var filterproductBySlideViewModel = new FilterproductsBySliderViewModel();
                        filterproductBySlideViewModel.Products = Model.Products;
                        filterproductBySlideViewModel.Pager = Model.Pager;
                        filterproductBySlideViewModel.CategoryId = Model.CategoryId;
                        filterproductBySlideViewModel.SortBy = Model.SortBy;

                        Html.RenderPartial("GetProductsBySlideFilter", filterproductBySlideViewModel);
                    }
                </div>



            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->


<script type="text/javascript">

    function checkSearchVal(elem) {
        debugger;
        var searchVal = $(elem).val();

        if (searchVal != null && searchVal != "" && typeof searchVal != "undefined") {
            $("#hidetClearIcon").show();
        }

        else {
            $("#hidetClearIcon").hide();
        }
    }

    var callTimeOutForSlider;
    var priceSlider = $("#slide-range").slider({
        range: true,
        min: 0,
        max: @Model.MaximumPrice,
        values: [0, @Model.MaximumPrice],
        slide: function (event, ui) {

            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];

            $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");

            clearTimeout(callTimeOutForSlider);

            callTimeOutForSlider = setTimeout(getproductsBySliderFiltering, 1000);

        }
    });

    $(".dataLink").click(function () {

        var url = $(this).attr('data-href');

        if (url != null || url != "" || typeof url != "undefined") {
            getproductsByFiltering(url);
        }
    });
    

    function getproductsByFiltering(UrlLink) {
        showLoader();
         $.ajax({
             url: UrlLink,
             data: {
                 minimumPrice: priceSlider.slider("values", 0),
                 maximumPrice: priceSlider.slider("values", 1)
             }

        }).done(function (data) {

            $("#productsDiv").html(data);

        }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {

            alert("Failed");

        }).always(function () {

              hideLoader();

        });

    }

    function getproductsBySliderFiltering(minPrice, maxPrice) {

         $.ajax({
            url: '@Url.Action("GetProductsBySlideFilter", "Shop")',
             data: {
                searchTerm: $("#searchTerm").val(),
                categoryId: $("#CategoryId").val(),
                sortBy: $("#SortBy").val(),
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }

        }).done(function (data) {

            $("#productsDiv").html(data);

        }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {

            alert("Failed");
        });

    }


</script>